name: CI (.NET Framework 4.8)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Setup VSTest
        uses: darenm/Setup-VSTest@v1

      - name: Restore NuGet packages
        run: nuget restore

      - name: Build solution
        run: msbuild /p:Configuration=Release

      - name: Run tests with coverage (Coverlet + vstest.console)
        shell: powershell
        run: |
          try {
            dotnet tool install --global coverlet.console
          } catch {
            Write-Host "coverlet already installed"
          }
          $env:Path += ";$env:USERPROFILE\.dotnet\tools"
          $testResults = Join-Path -Path (Get-Location) -ChildPath "TestResults"
          if (-not (Test-Path $testResults)) { New-Item -ItemType Directory -Force -Path $testResults | Out-Null }
          # Поиск тестовых сборок (.NET Framework 4.8)
          $tests = Get-ChildItem -Recurse -Filter CSharpEduLib.Tests.dll | Where-Object { $_.FullName -match "\\bin\\Release\\" -and $_.FullName -notmatch "ref|TestHost|TestAdapter|TestFramework" }
          if (-not $tests) { Write-Host "No test assemblies found"; exit 1 }
          foreach ($t in $tests) {
            $outFile = Join-Path $testResults ("coverage_" + $t.BaseName + ".xml")
            coverlet $t.FullName --target "vstest.console.exe" --targetargs "\"$($t.FullName)\" /Framework:.NETFramework,Version=v4.8" --format cobertura --output "$outFile"
          }

      - name: ReportGenerator
        if: always()
        shell: powershell
        run: |
          try {
            dotnet tool install --global dotnet-reportgenerator-globaltool
          } catch {
            Write-Host "reportgenerator already installed"
          }
          $env:Path += ";$env:USERPROFILE\.dotnet\tools"
          $testResults = Join-Path -Path (Get-Location) -ChildPath "TestResults"
          if (-not (Test-Path $testResults)) { Write-Host "No TestResults directory"; exit 0 }
          reportgenerator -reports:"$testResults/*.xml" -targetdir:"CoverageReport" -reporttypes:Html

      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: CoverageReport
          path: CoverageReport